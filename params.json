{"name":"SHC Application Framework","tagline":"Raspberry Pi Smart Home Control 3.0","body":"# SHC Application Framework\r\n\r\nDas Application Framework ist der Nachfolger des Raspberry Pi SmartHome Control 2.x. Das Apllication Framework wird zu großen Teilen in Java geschrieben und bricht damit einige grenzen des in PHP geschriebenen RPi SmartHome Controls auf.\r\n\r\n## Module\r\n\r\nDas Framework besteht aus mehreren Modulen. Im folgenden sind die Module kurz aufgeführt und erläutert.\r\n\r\n#### SHC Core\r\nDer Core ist die Basis Libary weleche für alle anderen Module die gemeinsamen Daten und Funktionen zusammenführt.\r\n\r\n#### Application Server\r\nDer Appliaction Server ist da neue Herz des Framework. Er Verwaltet alle Daten und bearbeitet die Automatisierungsfunktionen. Zudem stellt der Server alle nötigen Schnittstellen für die Grafikoberflächen bereit.\r\nGespeichert werden Alle Daten in eine Redis Datenbank. Alle Benutzeroberflächen verbinden sich mit der Server und dienen nur noch zur Anzeige und Interaktion mit dem Benutzer.\r\n\r\n#### CLI Client\r\nDer CLI Client ist ein Kommandozeilen Tool über das sich der Status der Elemente abfragen lässt und die schaltbaren Elemente geschaltet werden können.\r\n\r\n#### Desktop Client\r\nDer Desktop Client ist die neuen Hauptoberfläche des SHC. Über ihn lassen sich allen Funktionen des SHC verwenden und Einstellen. Über ihn lassen sich auch alle Verwaltungsfunktionen verwenden. Der Desktop Client wird in JavaFX 8 geschrieben und setzt Java 8 Update 40 voraus.\r\n\r\n#### Android Client\r\nDer Android Client wird einen ähnlichen Funktiontionsumfang wie der Desktop Client erhalten, nur speziell auf die Bedingung über Mobile Endgeräte ausgelegt. Vorgesehen ist hier eine Unterstützung ab Android 4.0.\r\n\r\n#### Web Client\r\nDer Web Client ist eine Weboberfläche die für Desktop und Mobile Endgeräte optimiert ist. Allerdings können über den Web Client keine Verwaltungsfunktionen mehr verwendet werden.\r\n\r\n#### Schaltserver\r\nDer Schaltserver dient wie im alten SHC als Schnittstelle zur Hardware. Zudem wird er im Funktionsumfang noch einmal deutlich erweitert. Wie schon zuvor können mehrere Schaltserver verwendet werden.\r\n\r\n#### Sensorsender\r\nDer Sensorsender wird im im alten SHC die Sensordaten auf dem Raspberry Pi an den Server schicken.\r\n\r\n## Unterstützte Funktionen\r\n\r\n#### schaltbare/lesbare Elemente\r\n  * 433MHz Steckdosen\r\n  * AVM DECT Steckdosen\r\n  * Edimax SP-1101W und SP2101W WLan Steckdosen **neu**\r\n  * Fritz!Box Funktionen (WLan an/aus, Neustart ...)\r\n  * Neustart/Herunterfahren des Servers\r\n  * Neustart/Herunterfahren von Schaltservern **neu**\r\n  * GPIOs vom Raspberry Pi und Microcontrollern als Eingang lesen und als Ausgang schalten\r\n  * Scripte auf dem App Server oder Schaltserbern ausführen **neu**\r\n  * Rechner im Netzwerk starten \"Wake on Lan\"\r\n  * Benutzer zu Hause\r\n\r\n#### Gruppen Elemente\r\n  * Aktivitäten (Gruppenschaltung von mehreren schaltbaren Elementen)\r\n  * Countdown (zeitlich begenzte Gruppenschaltung von mehreren schaltbaren Elementen)\r\n  * Button (Tastfunktion)\r\n\r\n#### Sensoren\r\n  * DS12x20 Sensoren\r\n  * DHT Sensoren\r\n  * BMP Sensoren\r\n  * Regen Sensoren\r\n  * Feuchtigkeits Sensoren\r\n  * Lichtstärke Sensoren\r\n  * Wasserzähler, Gaszähler Stromzähler **neu**\r\n  * HC-SR04 Sensoren **neu**\r\n  * SCT-013 Sensoren **neu**\r\n  * Akkus (Ladezustand) **neu**\r\n\r\n#### virtuelle Sensoren (Statistische Mittelwerte von Sensoren mit gleichen Werten)\r\n  * Energiemesser **neu**\r\n  * Stromverbrauch **neu**\r\n  * Feuchtigkeit **neu**\r\n  * Lichtstärke **neu**\r\n  * Temperatur **neu**\r\n  * Luftfeuchte **neu**\r\n  * Menge (Strom, Gas, Wasser) **neu**","google":"UA-54122268-5","note":"Don't delete this file! It's used internally to help with page regeneration."}